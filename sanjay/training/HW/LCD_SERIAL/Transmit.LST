C51 COMPILER V7.06   TRANSMIT                                                              07/27/2011 23:34:24 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE TRANSMIT
OBJECT MODULE PLACED IN Transmit.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Transmit.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include <stdio.h>
   4          unsigned int serial_flag;
   5          unsigned char data_temp;
   6          // add lcd.c and varflag.c to run this program.
   7          
   8          
   9          extern void SendCommand(unsigned char comd);
  10          extern void writeData_LCD(unsigned char mdata[], unsigned int counter);
  11          extern void delay(unsigned int val);
  12          
  13          void initilise_serial();
  14          void transmit_N_Disp_data();
  15          
  16          void initilise_serial()
  17          {
  18   1              TR1 = 0;
  19   1              ES = 0;
  20   1              EA = 0;
  21   1              SCON  = 0x50;                   /* SCON: mode 1, 8-bit UART, enable rcvr */
  22   1              TMOD = 0x20;               /* TMOD: timer 1, mode 2, 8-bit reload */
  23   1              TH1   = 253;                /* TH1:  reload value for 9600 baud @ 11.059 MHz */
  24   1              TR1   = 1;                  /* TR1:  timer 1 run */
  25   1      
  26   1              EA = 1;
  27   1              ES = 1;
  28   1              RI = 0;
  29   1              TI = 0;
  30   1              serial_flag = 0;
  31   1      
  32   1      }
  33          
  34          /******************************************************************************
  35          
  36            *  Function        : serial_intr(void) interrupt 4                                                      
             -                        
  37                                                                                                                                                                          
  38            *  Purpose         : ISR routine for serial interrupt.
  39                                        
  40            * Parameters       : None.    
  41            
  42            * Globals Used     : None.
  43                            
  44            * Return           : None.
  45                                          
  46          *******************************************************************************/
  47          
  48          
  49          void serial_intr(void) interrupt 4
  50          {
  51   1              if(RI)
  52   1              {
  53   2                      RI = 0;
  54   2                      serial_flag = 1;
C51 COMPILER V7.06   TRANSMIT                                                              07/27/2011 23:34:24 PAGE 2   

  55   2                      data_temp = SBUF;
  56   2              }
  57   1              else if (TI)
  58   1              {
  59   2                      TI = 0;
  60   2              }
  61   1      }
  62          
  63          /******************************************************************************
  64          
  65            *  Function        : transmit_data()                                                                    
             -        
  66                                                                                                                                                                          
  67            *  Purpose         : Send message "You have pressed " on terminal first through
  68                                                     serial port and then send the data available in temp. 
  69                                                     variable thr. serial port Next time data will be displayed
  70                                                     on next line.
  71                                        
  72            * Parameters       : None.    
  73            
  74            * Globals Used     : None.
  75                            
  76            * Return           : None.
  77                                          
  78          *******************************************************************************/
  79          
  80          void printstr(unsigned char * mstr)
  81          {
  82   1              unsigned char *tmp;
  83   1              unsigned int i,j;       
  84   1              tmp = mstr;
  85   1      
  86   1              while(*mstr != '\0')
  87   1              {
  88   2                      SBUF = *mstr;
  89   2                      mstr++;
  90   2                      while(!TI);
  91   2                      TI = 0;
  92   2              }
  93   1      
  94   1              for(i=0;i<10;i++)
  95   1              {
  96   2                      SendCommand(0xC0);// select line 1 on LCD
  97   2                      delay(5);
  98   2      
  99   2                      writeData_LCD(tmp,9-i);
 100   2                      for(j=0;j<1;j++)
 101   2                              writeData_LCD(" ",1);
 102   2                      tmp++;
 103   2                      delay(5);
 104   2                      for(j=0;j<10000;j++);
 105   2                      for(j=0;j<10000;j++);
 106   2                      for(j=0;j<10000;j++);
 107   2                      for(j=0;j<10000;j++);
 108   2              }
 109   1      }
 110          
 111          void transmit_N_Disp_data()
 112          {
 113   1              char name[10] = "Kaay re ";
 114   1      
 115   1              ES = 0;
C51 COMPILER V7.06   TRANSMIT                                                              07/27/2011 23:34:24 PAGE 3   

 116   1              TI=0;
 117   1      
 118   1              name[8] = data_temp;
 119   1              name[9] = 0;
 120   1              printstr(name);
 121   1      
 122   1              SBUF = 0x0D;                            // clear display of terminal.
 123   1              while(!TI);
 124   1              TI = 0;
 125   1      
 126   1              SBUF = 0x0A;                            // Puts cursor of terminal on next line.
 127   1              while(!TI);
 128   1              TI = 0;
 129   1              ES = 1;
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    329    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
