C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE TRANSMIT
OBJECT MODULE PLACED IN Transmit.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Transmit.c BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS PREPRINT

stmt level    source

   1          /******************************************************************************
   2          
   3            *  Analyse            : Receive data through serial port and display that received data
   4                                                            on terminal.                                                                    
   5                                                                                                                                                                          
   6            *  Purpose            : In this program, the serial interrupt is enabled to receive 
   7                                                            data through serial port. So whenever the data is transmitted 
   8                                                            through serial port,which goes its SBUF generates serial 
   9                                                            interrupt and enters into its ISR routine, where data came 
  10                                                            in SBUF will be stored in temp. variable and serial_flag
  11                                                                  will be set. 
  12                  
  13                                                            The main function checking this flag contineously and while 
  14                                                            this flag is set, it reset the above flag and executes the
  15                                                            function transmit_data in     which data will be received in 
  16                                                            SBUF thr. Serial port to display it on terminal with message 
  17                                                            " You have pressed --".
  18          
  19          */
  20          #include<reg51.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  REG51.H
   3      =1  
   4      =1  Header file for generic 80C51 and 80C31 microcontroller.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __REG51_H__
  10      =1  #define __REG51_H__
  11      =1  
  12      =1  /*  BYTE Register  */
  13      =1  sfr P0   = 0x80;
  14      =1  sfr P1   = 0x90;
  15      =1  sfr P2   = 0xA0;
  16      =1  sfr P3   = 0xB0;
  17      =1  sfr PSW  = 0xD0;
  18      =1  sfr ACC  = 0xE0;
  19      =1  sfr B    = 0xF0;
  20      =1  sfr SP   = 0x81;
  21      =1  sfr DPL  = 0x82;
  22      =1  sfr DPH  = 0x83;
  23      =1  sfr PCON = 0x87;
  24      =1  sfr TCON = 0x88;
  25      =1  sfr TMOD = 0x89;
  26      =1  sfr TL0  = 0x8A;
  27      =1  sfr TL1  = 0x8B;
  28      =1  sfr TH0  = 0x8C;
  29      =1  sfr TH1  = 0x8D;
  30      =1  sfr IE   = 0xA8;
  31      =1  sfr IP   = 0xB8;
  32      =1  sfr SCON = 0x98;
  33      =1  sfr SBUF = 0x99;
  34      =1  
  35      =1  
C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 2   

  36      =1  /*  BIT Register  */
  37      =1  /*  PSW   */
  38      =1  sbit CY   = 0xD7;
  39      =1  sbit AC   = 0xD6;
  40      =1  sbit F0   = 0xD5;
  41      =1  sbit RS1  = 0xD4;
  42      =1  sbit RS0  = 0xD3;
  43      =1  sbit OV   = 0xD2;
  44      =1  sbit P    = 0xD0;
  45      =1  
  46      =1  /*  TCON  */
  47      =1  sbit TF1  = 0x8F;
  48      =1  sbit TR1  = 0x8E;
  49      =1  sbit TF0  = 0x8D;
  50      =1  sbit TR0  = 0x8C;
  51      =1  sbit IE1  = 0x8B;
  52      =1  sbit IT1  = 0x8A;
  53      =1  sbit IE0  = 0x89;
  54      =1  sbit IT0  = 0x88;
  55      =1  
  56      =1  /*  IE   */
  57      =1  sbit EA   = 0xAF;
  58      =1  sbit ES   = 0xAC;
  59      =1  sbit ET1  = 0xAB;
  60      =1  sbit EX1  = 0xAA;
  61      =1  sbit ET0  = 0xA9;
  62      =1  sbit EX0  = 0xA8;
  63      =1  
  64      =1  /*  IP   */ 
  65      =1  sbit PS   = 0xBC;
  66      =1  sbit PT1  = 0xBB;
  67      =1  sbit PX1  = 0xBA;
  68      =1  sbit PT0  = 0xB9;
  69      =1  sbit PX0  = 0xB8;
  70      =1  
  71      =1  /*  P3  */
  72      =1  sbit RD   = 0xB7;
  73      =1  sbit WR   = 0xB6;
  74      =1  sbit T1   = 0xB5;
  75      =1  sbit T0   = 0xB4;
  76      =1  sbit INT1 = 0xB3;
  77      =1  sbit INT0 = 0xB2;
  78      =1  sbit TXD  = 0xB1;
  79      =1  sbit RXD  = 0xB0;
  80      =1  
  81      =1  /*  SCON  */
  82      =1  sbit SM0  = 0x9F;
  83      =1  sbit SM1  = 0x9E;
  84      =1  sbit SM2  = 0x9D;
  85      =1  sbit REN  = 0x9C;
  86      =1  sbit TB8  = 0x9B;
  87      =1  sbit RB8  = 0x9A;
  88      =1  sbit TI   = 0x99;
  89      =1  sbit RI   = 0x98;
  90      =1  
  91      =1  #endif
  21          #include <stdio.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  STDIO.H
   3      =1  
   4      =1  Prototypes for standard I/O functions.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 3   

   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __STDIO_H__
  10      =1  #define __STDIO_H__
  11      =1  
  12      =1  #ifndef EOF
  13      =1   #define EOF -1
  14      =1  #endif
  15      =1  
  16      =1  #ifndef NULL
  17      =1   #define NULL ((void *) 0)
  18      =1  #endif
  19      =1  
  20      =1  #ifndef _SIZE_T
  21      =1   #define _SIZE_T
  22      =1   typedef unsigned int size_t;
  23      =1  #endif
  24      =1  
  25      =1  #pragma SAVE
  26      =1  #pragma REGPARMS
  27      =1  extern char _getkey (void);
  28      =1  extern char getchar (void);
  29      =1  extern char ungetchar (char);
  30      =1  extern char putchar (char);
  31      =1  extern int printf   (const char *, ...);
  32      =1  extern int sprintf  (char *, const char *, ...);
  33      =1  extern int vprintf  (const char *, char *);
  34      =1  extern int vsprintf (char *, const char *, char *);
  35      =1  extern char *gets (char *, int n);
  36      =1  extern int scanf (const char *, ...);
  37      =1  extern int sscanf (char *, const char *, ...);
  38      =1  extern int puts (const char *);
  39      =1  
  40      =1  #pragma RESTORE
  41      =1  
  42      =1  #endif
  43      =1  
  22          #include <intrins.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  INTRINS.H
   3      =1  
   4      =1  Intrinsic functions for C51.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __INTRINS_H__
  10      =1  #define __INTRINS_H__
  11      =1  
  12      =1  extern void          _nop_     (void);
  13      =1  extern bit           _testbit_ (bit);
  14      =1  extern unsigned char _cror_    (unsigned char, unsigned char);
  15      =1  extern unsigned int  _iror_    (unsigned int,  unsigned char);
  16      =1  extern unsigned long _lror_    (unsigned long, unsigned char);
  17      =1  extern unsigned char _crol_    (unsigned char, unsigned char);
  18      =1  extern unsigned int  _irol_    (unsigned int,  unsigned char);
  19      =1  extern unsigned long _lrol_    (unsigned long, unsigned char);
  20      =1  extern unsigned char _chkfloat_(float);
  21      =1  
  22      =1  #endif
  23      =1  
C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 4   

  23          
  24          //#include "lcd.h"
  25          //#include "port.h"
  26          //#include "varflag.h"
  27          
  28          unsigned char data_temp,  serial_flag;
  29          // add lcd.c and varflag.c to run this program.
  30          
  31          
  32          void initilise();
  33           void transmit_data();
  34          //sbit LED = P1^6;
  35          
  36          
  37          /******************************************************************************
  38          
  39            *  Function        :  initialise().                                                                     
             -            
  40                                                                                                                                                                          
  41            *  Purpose         : Initialises ports, port pins of display, flags and enable 
  42                                                          interrupt for serial port required in the program.
  43                                        
  44            * Parameters       : None.    
  45            
  46            * Globals Used     : None.
  47                            
  48            * Return           : None.
  49                                          
  50          *******************************************************************************/
  51          
  52          void initilise_rs232()
  53          {
  54   1              TR1 = 0;
  55   1              ES = 0;
  56   1              EA = 0;
  57   1              SCON  = 0x50;                   /* SCON: mode 1, 8-bit UART, enable rcvr */
  58   1              TMOD = 0x20;               /* TMOD: timer 1, mode 2, 8-bit reload */
  59   1              TH1   = 253;                /* TH1:  reload value for 9600 baud @ 11.059 MHz */
  60   1              TR1   = 1;                  /* TR1:  timer 1 run */
  61   1      
  62   1              EA = 1;
  63   1              ES = 1;
  64   1              RI = 0;
  65   1              TI = 0;
  66   1              serial_flag = 0;
  67   1      
  68   1      }
  69          
  70          /******************************************************************************
  71          
  72            *  Function        : serial_intr(void) interrupt 4                                                      
             -                        
  73                                                                                                                                                                          
  74            *  Purpose         : ISR routine for serial interrupt.
  75                                        
  76            * Parameters       : None.    
  77            
  78            * Globals Used     : None.
  79                            
  80            * Return           : None.
  81                                          
  82          *******************************************************************************/
C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 5   

  83          
  84          
  85          void serial_intr(void) interrupt 4
  86          {
  87   1              if(RI)
  88   1              {
  89   2                      RI = 0;
  90   2                      serial_flag = 1;
  91   2                      data_temp = SBUF;
  92   2              }
  93   1              else if (TI)
  94   1              {
  95   2                      TI = 0;
  96   2              }
  97   1      }
  98          
  99          /******************************************************************************
 100          
 101            *  Function        : transmit_data()                                                                    
             -        
 102                                                                                                                                                                          
 103            *  Purpose         : Send message "You have pressed " on terminal first through
 104                                                     serial port and then send the data available in temp. 
 105                                                     variable thr. serial port Next time data will be displayed
 106                                                     on next line.
 107                                        
 108            * Parameters       : None.    
 109            
 110            * Globals Used     : None.
 111                            
 112            * Return           : None.
 113                                          
 114          *******************************************************************************/
 115          
 116          void printstr(unsigned char * mstr)
 117          {
 118   1              while(*mstr != '\0')
 119   1              {
 120   2                      SBUF = *mstr;
 121   2                      mstr++;
 122   2                      while(!TI);
 123   2                      TI = 0;
 124   2              }
 125   1      }
 126          
 127          void transmit_data()
 128          {
 129   1              char name[] = "You have pressed ";
 130   1      
 131   1              ES = 0;
 132   1              TI=0;
 133   1              
 134   1      //      LED = 0;
 135   1              printstr(name);
 136   1      
 137   1              SBUF = data_temp;
 138   1              while(!TI);
 139   1              TI = 0;
 140   1      
 141   1              SBUF = 0x0D;                            // clear display of terminal.
 142   1              while(!TI);
 143   1              TI = 0;
C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 6   

 144   1      
 145   1              SBUF = 0x0A;                            // Puts cursor of terminal on next line.
 146   1              while(!TI);
 147   1              TI = 0;
 148   1              ES = 1;
 149   1      //      LED = 1;
 150   1      }
C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION initilise_rs232 (BEGIN)
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
0000 C28E              CLR     TR1
                                           ; SOURCE LINE # 55
0002 C2AC              CLR     ES
                                           ; SOURCE LINE # 56
0004 C2AF              CLR     EA
                                           ; SOURCE LINE # 57
0006 759850            MOV     SCON,#050H
                                           ; SOURCE LINE # 58
0009 758920            MOV     TMOD,#020H
                                           ; SOURCE LINE # 59
000C 758DFD            MOV     TH1,#0FDH
                                           ; SOURCE LINE # 60
000F D28E              SETB    TR1
                                           ; SOURCE LINE # 62
0011 D2AF              SETB    EA
                                           ; SOURCE LINE # 63
0013 D2AC              SETB    ES
                                           ; SOURCE LINE # 64
0015 C298              CLR     RI
                                           ; SOURCE LINE # 65
0017 C299              CLR     TI
                                           ; SOURCE LINE # 66
0019 E4                CLR     A
001A F500        R     MOV     serial_flag,A
                                           ; SOURCE LINE # 68
001C 22                RET     
             ; FUNCTION initilise_rs232 (END)

             ; FUNCTION serial_intr (BEGIN)
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 87
0000 309809            JNB     RI,?C0002
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
0003 C298              CLR     RI
                                           ; SOURCE LINE # 90
0005 750001      R     MOV     serial_flag,#01H
                                           ; SOURCE LINE # 91
0008 859900      R     MOV     data_temp,SBUF
                                           ; SOURCE LINE # 92
000B 32                RETI    
000C         ?C0002:
                                           ; SOURCE LINE # 93
000C 309902            JNB     TI,?C0005
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
000F C299              CLR     TI
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0011         ?C0005:
0011 32                RETI    
             ; FUNCTION serial_intr (END)

             ; FUNCTION _printstr (BEGIN)
                                           ; SOURCE LINE # 116
C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 8   

;---- Variable 'mstr' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 117
0000         ?C0006:
                                           ; SOURCE LINE # 118
0000 120000      E     LCALL   ?C?CLDPTR
0003 6010              JZ      ?C0010
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
0005 F599              MOV     SBUF,A
                                           ; SOURCE LINE # 121
0007 7401              MOV     A,#01H
0009 29                ADD     A,R1
000A F9                MOV     R1,A
000B E4                CLR     A
000C 3A                ADDC    A,R2
000D FA                MOV     R2,A
000E         ?C0008:
                                           ; SOURCE LINE # 122
000E 3099FD            JNB     TI,?C0008
0011         ?C0009:
                                           ; SOURCE LINE # 123
0011 C299              CLR     TI
                                           ; SOURCE LINE # 124
0013 80EB              SJMP    ?C0006
                                           ; SOURCE LINE # 125
0015         ?C0010:
0015 22                RET     
             ; FUNCTION _printstr (END)

             ; FUNCTION transmit_data (BEGIN)
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
0000 7800        R     MOV     R0,#LOW name
0002 7C00        R     MOV     R4,#HIGH name
0004 7D00              MOV     R5,#00H
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C 7E00              MOV     R6,#00H
000E 7F12              MOV     R7,#012H
0010 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 131
0013 C2AC              CLR     ES
                                           ; SOURCE LINE # 132
0015 C299              CLR     TI
                                           ; SOURCE LINE # 135
0017 7B00              MOV     R3,#00H
0019 7A00        R     MOV     R2,#HIGH name
001B 7900        R     MOV     R1,#LOW name
001D 120000      R     LCALL   _printstr
                                           ; SOURCE LINE # 137
0020 850099      R     MOV     SBUF,data_temp
0023         ?C0011:
                                           ; SOURCE LINE # 138
0023 3099FD            JNB     TI,?C0011
0026         ?C0012:
                                           ; SOURCE LINE # 139
0026 C299              CLR     TI
                                           ; SOURCE LINE # 141
0028 75990D            MOV     SBUF,#0DH
002B         ?C0013:
C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 9   

                                           ; SOURCE LINE # 142
002B 3099FD            JNB     TI,?C0013
002E         ?C0014:
                                           ; SOURCE LINE # 143
002E C299              CLR     TI
                                           ; SOURCE LINE # 145
0030 75990A            MOV     SBUF,#0AH
0033         ?C0015:
                                           ; SOURCE LINE # 146
0033 3099FD            JNB     TI,?C0015
0036         ?C0016:
                                           ; SOURCE LINE # 147
0036 C299              CLR     TI
                                           ; SOURCE LINE # 148
0038 D2AC              SETB    ES
                                           ; SOURCE LINE # 150
003A 22                RET     
             ; FUNCTION transmit_data (END)

C51 COMPILER V7.06   TRANSMIT                                                              08/01/2011 22:38:04 PAGE 10  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


serial_flag. . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
serial_intr. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
initilise_rs232. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
data_temp. . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0001H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
_?ix1000 . . . . . . . . . . . . . . .  STATIC   CODE   ARRAY    0000H  18
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
_printstr. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  mstr . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
transmit_data. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  name . . . . . . . . . . . . . . . .  AUTO     DATA   ARRAY    0000H  18


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    128    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
