C51 COMPILER V7.06   I2C_EEPROM                                                            07/29/2011 00:23:48 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE I2C_EEPROM
OBJECT MODULE PLACED IN I2C_EEPROM.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE I2C_EEPROM.C BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include <reg51.h>
   2          #include "declare.h"
   3          
   4          void wait(int time)
   5          {
   6   1              time *=1000;
   7   1              while(time--)
   8   1              {
   9   2                      _nop_();
  10   2              }
  11   1      }
  12          
  13          /*
  14          void Sequential_Read(unsigned char Device_Address,unsigned char byte1_Word_Address,unsigned char byte2_Wor
             -d_Address, unsigned int num_byte2read)
  15          {
  16                  unsigned int i=8,j;
  17                  unsigned char x=8;
  18                  unsigned char readbyte = 0x00;
  19                  I2C_Start();    
  20                  send_Device_Address(Device_Address); // write mode
  21                  device_ACK();
  22          
  23                  send_Word_Address(byte1_Word_Address); // first byte of word address
  24                  device_ACK();
  25          
  26                  send_Word_Address(byte2_Word_Address); // second byte of word address
  27                  device_ACK();
  28          
  29                  I2C_Start();    
  30                          Device_Address = (unsigned char)(Device_Address + 1);
  31                          send_Device_Address(Device_Address); // write mode
  32                          device_ACK();
  33                          while(num_byte2read--)
  34                          {
  35                                  for(i=0;i<8;i++)
  36                                  {
  37                                          readbyte = readbyte << 1;
  38                                          SCL = LOW;
  39                                          SCL = HIGH;
  40                                          if(SDA == 1)
  41                                                  readbyte = readbyte | 0x01;
  42                                          else if(SDA == 0)
  43                                                  readbyte = readbyte | 0x00;
  44                                  }                                       
  45                                  printf("%c",readbyte);
  46                                  SCL = LOW;
  47                                  SDA = LOW;
  48                                  SCL = HIGH;
  49                                  SCL =LOW;
  50          //                      if(num_byte2read!=1)
  51          //                              Master_ACK();
  52                          }
  53                          SCL = LOW;
  54                          SDA = HIGH;
C51 COMPILER V7.06   I2C_EEPROM                                                            07/29/2011 00:23:48 PAGE 2   

  55                          SCL = HIGH;
  56                  I2C_Stop();
  57          }
  58          */
  59          void initialise(void)
  60          {
  61   1              P0 =0xFF;
  62   1              P1 = 0xFF;
  63   1      
  64   1              SCON    = 0x50;
  65   1              TMOD    = 0x20;
  66   1              TI              = 1;
  67   1              TR1             = 1;
  68   1              TH1             = 0xFD;
  69   1              EA              = 0;
  70   1      }
  71          
  72          unsigned char current_address_read(unsigned char Device_Address)
  73          {
  74   1              int i=8;
  75   1              unsigned char x=8;
  76   1              unsigned char readbyte=0x00;
  77   1              Device_Address = (unsigned char)(Device_Address + 1);
  78   1              I2C_Start();    
  79   1                      send_Device_Address(Device_Address); // write mode
  80   1                      device_ACK();
  81   1      
  82   1                      for(i=0;i<8;i++)
  83   1                      {
  84   2                              readbyte = readbyte << 1;
  85   2      
  86   2                              SCL = LOW;
  87   2      
  88   2                              SCL = HIGH;
  89   2                              if(SDA == 1)
  90   2                                      readbyte = readbyte | 0x01;
  91   2                              else if(SDA == 0)
  92   2                                      readbyte = readbyte | 0x00;
  93   2                      }
  94   1      
  95   1                      SCL = LOW;
  96   1                      printf("%c",readbyte);
  97   1      
  98   1              I2C_Stop();     
  99   1              return(readbyte);
 100   1      }
 101          
 102          void byte_write(unsigned char byte,unsigned char Device_Address,unsigned char byte1_Word_Address,unsigned 
             -char byte2_Word_Address)
 103          {
 104   1              I2C_Start();    
 105   1                      send_Device_Address(Device_Address); // write mode
 106   1                      device_ACK();
 107   1      
 108   1                      send_Word_Address(byte1_Word_Address); // first byte of word address
 109   1                      device_ACK();
 110   1      
 111   1                      send_Word_Address(byte2_Word_Address); // second byte of word address
 112   1                      device_ACK();
 113   1      
 114   1                      send_Data(byte);                        
 115   1                      device_ACK();
C51 COMPILER V7.06   I2C_EEPROM                                                            07/29/2011 00:23:48 PAGE 3   

 116   1              I2C_Stop();     
 117   1      }
 118          
 119          unsigned char Random_Read(unsigned char Device_Address,unsigned char byte1_Word_Address,unsigned char byte
             -2_Word_Address)
 120          {
 121   1              int i=8;
 122   1              unsigned char x=8;
 123   1              unsigned char readbyte = 0x00;
 124   1              I2C_Start();    
 125   1              send_Device_Address(Device_Address); // write mode
 126   1              device_ACK();
 127   1      
 128   1              send_Word_Address(byte1_Word_Address); // first byte of word address
 129   1              device_ACK();
 130   1      
 131   1              send_Word_Address(byte2_Word_Address); // second byte of word address
 132   1              device_ACK();
 133   1      
 134   1              I2C_Start();    
 135   1              Device_Address = (unsigned char)(Device_Address + 1);
 136   1                      send_Device_Address(Device_Address); // write mode
 137   1                      device_ACK();
 138   1      
 139   1                      for(i=0;i<8;i++)
 140   1                      {
 141   2                              readbyte = readbyte << 1;
 142   2      
 143   2                              SCL = LOW;
 144   2                              SCL = HIGH;
 145   2                              if(SDA == 1)
 146   2                                      readbyte = readbyte | 0x01;
 147   2                              else if(SDA == 0)
 148   2                                      readbyte = readbyte | 0x00;
 149   2                      }
 150   1      
 151   1                      SCL = LOW;
 152   1                      printf("%c",readbyte);
 153   1      
 154   1              I2C_Stop();     
 155   1              return(readbyte);
 156   1      }
 157          
 158          void main(void)
 159          {
 160   1              unsigned char x = 0,y;
 161   1              initialise();
 162   1              I2C_initialise();       
 163   1              y=0x18; 
 164   1              while(1)
 165   1              {
 166   2      //              byte_write(65 + x,0xA0,0x00,y); // (data,Dev_add,word1,word2)
 167   2                      x++;
 168   2                      wait(10);
 169   2      //              set_Current_Address(0xA0,0x00,0x00);  // (Dev_add,word1,word2)
 170   2      //              x = current_address_read(0xA0);
 171   2                      x = Random_Read(0xA0,0x00, y);
 172   2      //              Sequential_Read(0xA0, 0x00, y, 8);
 173   2                      y++;
 174   2      //              if(y>31)
 175   2      //                      while(1);
 176   2                      printf("Data Read : %c", x);
C51 COMPILER V7.06   I2C_EEPROM                                                            07/29/2011 00:23:48 PAGE 4   

 177   2              }
 178   1      }
 179          
 180          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    344    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
