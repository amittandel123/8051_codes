AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     1


MACRO ASSEMBLER AX51 V2.13
OBJECT MODULE PLACED IN INST390.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.EXE INST390.A51 MOD_CONT SET(SMALL) DEBUG EP

LOC    OBJ             LINE     SOURCE

                          1     $mod_cont   ; Contiguous 22-bit addressing mode
                          2     
                          3     ;#include <REG390.H>
                    +1    4     
                    +1    5     
                    +1    6     
                    +1    7     
                    +1    8     
                    +1    9     
                    +1   10     
                    +1   11     
                    +1   12     
                    +1   13     
                    +1   14     
                    +1   15     
  0080              +1   16     sfr P4     = 0x80;
  0090              +1   17     sfr P1     = 0x90;
  00A0              +1   18     sfr P2     = 0xA0;
  00B0              +1   19     sfr P3     = 0xB0;
  00D0              +1   20     sfr PSW    = 0xD0;
  00E0              +1   21     sfr ACC    = 0xE0;
  00F0              +1   22     sfr B      = 0xF0;
  0081              +1   23     sfr SP     = 0x81;
  0082              +1   24     sfr DPL    = 0x82;
  0083              +1   25     sfr DPH    = 0x83;
  0087              +1   26     sfr PCON   = 0x87;
  0088              +1   27     sfr TCON   = 0x88;
  0089              +1   28     sfr TMOD   = 0x89;
  008A              +1   29     sfr TL0    = 0x8A;
  008B              +1   30     sfr TL1    = 0x8B;
  008C              +1   31     sfr TH0    = 0x8C;
  008D              +1   32     sfr TH1    = 0x8D;
  00A8              +1   33     sfr IE     = 0xA8;
  00B8              +1   34     sfr IP     = 0xB8;
  0098              +1   35     sfr SCON0  = 0x98;
  0099              +1   36     sfr SBUF0  = 0x99;
                    +1   37     
                    +1   38     
  0084              +1   39     sfr DPL1   = 0x84;
  0085              +1   40     sfr DPH1   = 0x85;
  0086              +1   41     sfr DPS    = 0x86;
  008E              +1   42     sfr CKCON  = 0x8E;
  0091              +1   43     sfr EXIF   = 0x91;
  0092              +1   44     sfr P4CNT  = 0x92;
  0093              +1   45     sfr DPX    = 0x93;
  0095              +1   46     sfr DPX1   = 0x95;
  0096              +1   47     sfr C0RMS0 = 0x96;
  0097              +1   48     sfr C0RMS1 = 0x97;
  009B              +1   49     sfr ESP    = 0x9B;
  009C              +1   50     sfr AP     = 0x9C;
  009D              +1   51     sfr ACON   = 0x9D;
  009E              +1   52     sfr C0TMA0 = 0x9E;
  009F              +1   53     sfr C0TMA1 = 0x9F;
  00A1              +1   54     sfr P5     = 0xA1;
  00A2              +1   55     sfr P5CNT  = 0xA2;
  00A3              +1   56     sfr C0C    = 0xA3;
  00A4              +1   57     sfr C0S    = 0xA4;
  00A5              +1   58     sfr C0IR   = 0xA5;
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     2

  00A6              +1   59     sfr C0TE   = 0xA6;
  00A7              +1   60     sfr C0RE   = 0xA7;
  00A9              +1   61     sfr SADDR0 = 0xA9;
  00AA              +1   62     sfr SADDR1 = 0xAA;
  00AB              +1   63     sfr C0M1C  = 0xAB;
  00AC              +1   64     sfr C0M2C  = 0xAC;
  00AD              +1   65     sfr C0M3C  = 0xAD;
  00AE              +1   66     sfr C0M4C  = 0xAE;
  00AF              +1   67     sfr C0M5C  = 0xAF;
  00B3              +1   68     sfr C0M6C  = 0xB3;
  00B4              +1   69     sfr C0M7C  = 0xB4;
  00B5              +1   70     sfr C0M8C  = 0xB5;
  00B6              +1   71     sfr C0M9C  = 0xB6;
  00B7              +1   72     sfr C0M10C = 0xB7;
  00B9              +1   73     sfr SADEN0 = 0xB9;
  00BA              +1   74     sfr SADEN1 = 0xBA;
  00BB              +1   75     sfr C0M11C = 0xBB;
  00BC              +1   76     sfr C0M12C = 0xBC;
  00BD              +1   77     sfr C0M13C = 0xBD;
  00BE              +1   78     sfr C0M14C = 0xBE;
  00BF              +1   79     sfr C0M15C = 0xBF;
  00C0              +1   80     sfr SCON1  = 0xC0;
  00C1              +1   81     sfr SBUF1  = 0xC1;
  00C4              +1   82     sfr PMR    = 0xC4;
  00C5              +1   83     sfr STATUS = 0xC5;
  00C6              +1   84     sfr MCON   = 0xC6;
  00C7              +1   85     sfr TA     = 0xC7;
  00C8              +1   86     sfr T2CON  = 0xC8;
  00C9              +1   87     sfr T2MOD  = 0xC9;
  00CA              +1   88     sfr RCAP2L = 0xCA;
  00CB              +1   89     sfr RCAP2H = 0xCB;
  00CC              +1   90     sfr TL2    = 0xCC;
  00CD              +1   91     sfr TH2    = 0xCD;
  00CE              +1   92     sfr COR    = 0xCE;
  00D1              +1   93     sfr MCNT0  = 0xD1;
  00D2              +1   94     sfr MCNT1  = 0xD2;
  00D3              +1   95     sfr MA     = 0xD3;
  00D4              +1   96     sfr MB     = 0xD4;
  00D5              +1   97     sfr MC     = 0xD5;
  00D6              +1   98     sfr C1RMS0 = 0xD6;
  00D7              +1   99     sfr C1RMS1 = 0xD7;
  00D8              +1  100     sfr WDCON  = 0xD8;
  00DE              +1  101     sfr C1TMA0 = 0xDE;
  00DF              +1  102     sfr C1TMA1 = 0xDF;
  00E3              +1  103     sfr C1C    = 0xE3;
  00E4              +1  104     sfr C1S    = 0xE4;
  00E5              +1  105     sfr C1IR   = 0xE5;
  00E6              +1  106     sfr C1TE   = 0xE6;
  00E7              +1  107     sfr C1RE   = 0xE7;
  00E8              +1  108     sfr EIE    = 0xE8;
  00EA              +1  109     sfr MXAX   = 0xEA;
  00EB              +1  110     sfr C1M1C  = 0xEB;
  00EC              +1  111     sfr C1M2C  = 0xEC;
  00ED              +1  112     sfr C1M3C  = 0xED;
  00EE              +1  113     sfr C1M4C  = 0xEE;
  00EF              +1  114     sfr C1M5C  = 0xEF;
  00F3              +1  115     sfr C1M6C  = 0xF3;
  00F4              +1  116     sfr C1M7C  = 0xF4;
  00F5              +1  117     sfr C1M8C  = 0xF5;
  00F6              +1  118     sfr C1M9C  = 0xF6;
  00F7              +1  119     sfr C1M10C = 0xF7;
  00F8              +1  120     sfr EIP    = 0xF8;
  00FB              +1  121     sfr C1M11C = 0xFB;
  00FC              +1  122     sfr C1M12C = 0xFC;
  00FD              +1  123     sfr C1M13C = 0xFD;
  00FE              +1  124     sfr C1M14C = 0xFE;
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     3

  00FF              +1  125     sfr C1M15C = 0xFF;
                    +1  126     
                    +1  127     
                    +1  128     
0080.7              +1  129     sbit P4_7  = P4^7;
0080.6              +1  130     sbit P4_6  = P4^6;
0080.5              +1  131     sbit P4_5  = P4^5;
0080.4              +1  132     sbit P4_4  = P4^4;
0080.3              +1  133     sbit P4_3  = P4^3;
0080.2              +1  134     sbit P4_2  = P4^2;
0080.1              +1  135     sbit P4_1  = P4^1;
0080.0              +1  136     sbit P4_0  = P4^0;
                    +1  137     
0090.7              +1  138     sbit P1_7  = P1^7;
0090.6              +1  139     sbit P1_6  = P1^6;
0090.5              +1  140     sbit P1_5  = P1^5;
0090.4              +1  141     sbit P1_4  = P1^4;
0090.3              +1  142     sbit P1_3  = P1^3;
0090.2              +1  143     sbit P1_2  = P1^2;
0090.1              +1  144     sbit P1_1  = P1^1;
0090.0              +1  145     sbit P1_0  = P1^0;
                    +1  146     
00A0.7              +1  147     sbit P2_7  = P2^7;
00A0.6              +1  148     sbit P2_6  = P2^6;
00A0.5              +1  149     sbit P2_5  = P2^5;
00A0.4              +1  150     sbit P2_4  = P2^4;
00A0.3              +1  151     sbit P2_3  = P2^3;
00A0.2              +1  152     sbit P2_2  = P2^2;
00A0.1              +1  153     sbit P2_1  = P2^1;
00A0.0              +1  154     sbit P2_0  = P2^0;
                    +1  155     
00B0.7              +1  156     sbit P3_7  = P3^7;
00B0.6              +1  157     sbit P3_6  = P3^6;
00B0.5              +1  158     sbit P3_5  = P3^5;
00B0.4              +1  159     sbit P3_4  = P3^4;
00B0.3              +1  160     sbit P3_3  = P3^3;
00B0.2              +1  161     sbit P3_2  = P3^2;
00B0.1              +1  162     sbit P3_1  = P3^1;
00B0.0              +1  163     sbit P3_0  = P3^0;
                    +1  164     
00D0.7              +1  165     sbit CY    = PSW^7;
00D0.6              +1  166     sbit AC    = PSW^6;
00D0.5              +1  167     sbit F0    = PSW^5;
00D0.4              +1  168     sbit RS1   = PSW^4;
00D0.3              +1  169     sbit RS0   = PSW^3;
00D0.2              +1  170     sbit OV    = PSW^2;
00D0.1              +1  171     sbit F1    = PSW^1;
00D0.0              +1  172     sbit P     = PSW^0;
                    +1  173     
0088.7              +1  174     sbit TF1   = TCON^7;
0088.6              +1  175     sbit TR1   = TCON^6;
0088.5              +1  176     sbit TF0   = TCON^5;
0088.4              +1  177     sbit TR0   = TCON^4;
0088.3              +1  178     sbit IE1   = TCON^3;
0088.2              +1  179     sbit IT1   = TCON^2;
0088.1              +1  180     sbit IE0   = TCON^1;
0088.0              +1  181     sbit IT0   = TCON^0;
                    +1  182     
00A8.7              +1  183     sbit EA    = IE^7;
00A8.6              +1  184     sbit ES1   = IE^6;
00A8.5              +1  185     sbit ET2   = IE^5;
00A8.4              +1  186     sbit ES0   = IE^4;
00A8.3              +1  187     sbit ET1   = IE^3;
00A8.2              +1  188     sbit EX1   = IE^2;
00A8.1              +1  189     sbit ET0   = IE^1;
00A8.0              +1  190     sbit EX0   = IE^0;
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     4

                    +1  191     
00B8.6              +1  192     sbit PS1   = IP^6;
00B8.5              +1  193     sbit PT2   = IP^5;
00B8.4              +1  194     sbit PS0   = IP^4;
00B8.3              +1  195     sbit PT1   = IP^3;
00B8.2              +1  196     sbit PX1   = IP^2;
00B8.1              +1  197     sbit PT0   = IP^1;
00B8.0              +1  198     sbit PX0   = IP^0;
                    +1  199     
0098.7              +1  200     sbit SM0   = SCON0^7; /* Alternate SM0_FE_0 */
0098.6              +1  201     sbit SM1   = SCON0^6; /* Alternate SM1_0 */
0098.5              +1  202     sbit SM2   = SCON0^5; /* Alternate SM2_0 */
0098.4              +1  203     sbit REN   = SCON0^4; /* Alternate REN_0 */
0098.3              +1  204     sbit TB8   = SCON0^3; /* Alternate TB8_0 */
0098.2              +1  205     sbit RB8   = SCON0^2; /* Alternate RB8_0 */
0098.1              +1  206     sbit TI    = SCON0^1; /* Alternate TI_0  */
0098.0              +1  207     sbit RI    = SCON0^0; /* Alternate RI_0  */
                    +1  208     
00C0.7              +1  209     sbit SM01  = SCON1^7; /* Alternate SM0_FE_1 */
00C0.6              +1  210     sbit SM11  = SCON1^6; /* Alternate SM1_1 */
00C0.5              +1  211     sbit SM21  = SCON1^5; /* Alternate SM2_1 */
00C0.4              +1  212     sbit REN1  = SCON1^4; /* Alternate REN_1 */
00C0.3              +1  213     sbit TB81  = SCON1^3; /* Alternate TB8_1 */
00C0.2              +1  214     sbit RB81  = SCON1^2; /* Alternate RB8_1 */
00C0.1              +1  215     sbit TI1   = SCON1^1; /* Alternate TI_1  */
00C0.0              +1  216     sbit RI1   = SCON1^0; /* Alternate RI_1  */
                    +1  217     
00C8.7              +1  218     sbit TF2   = T2CON^7;
00C8.6              +1  219     sbit EXF2  = T2CON^6;
00C8.5              +1  220     sbit RCLK  = T2CON^5;
00C8.4              +1  221     sbit TCLK  = T2CON^4;
00C8.3              +1  222     sbit EXEN2 = T2CON^3;
00C8.2              +1  223     sbit TR2   = T2CON^2;
00C8.1              +1  224     sbit C_T2  = T2CON^1;
00C8.0              +1  225     sbit CP_RL2= T2CON^0;
                    +1  226     
00D8.7              +1  227     sbit SMOD_1= WDCON^7;
00D8.6              +1  228     sbit POR   = WDCON^6;
00D8.5              +1  229     sbit EPF1  = WDCON^5;
00D8.4              +1  230     sbit PF1   = WDCON^4;
00D8.3              +1  231     sbit WDIF  = WDCON^3;
00D8.2              +1  232     sbit WTRF  = WDCON^2;
00D8.1              +1  233     sbit EWT   = WDCON^1;
00D8.0              +1  234     sbit RWT   = WDCON^0;
                    +1  235     
00E8.7              +1  236     sbit CANBIE= EIE^7;
00E8.6              +1  237     sbit C0IE  = EIE^6;
00E8.5              +1  238     sbit C1IE  = EIE^5;
00E8.4              +1  239     sbit EWDI  = EIE^4;
00E8.3              +1  240     sbit EX5   = EIE^3; /* Alternate EC3 */
00E8.2              +1  241     sbit EX4   = EIE^2; /* Alternate EC2 */
00E8.1              +1  242     sbit EX3   = EIE^1; /* Alternate EC1 */
00E8.0              +1  243     sbit EX2   = EIE^0; /* Alternate EC0 */
                    +1  244     
00F8.7              +1  245     sbit CANBIP= EIP^7;
00F8.6              +1  246     sbit C0IP  = EIP^6;
00F8.5              +1  247     sbit C1IP  = EIP^5;
00F8.4              +1  248     sbit PWDI  = EIP^4;
00F8.3              +1  249     sbit PX5   = EIP^3; /* Alternate PC3 */
00F8.2              +1  250     sbit PX4   = EIP^2; /* Alternate PC2 */
00F8.1              +1  251     sbit PX3   = EIP^1; /* Alternate PC1 */
00F8.0              +1  252     sbit PX2   = EIP^0; /* Alternate PC0 */
                    +1  253     
                    +1  254     
                        255     
                        256     
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     5

------                  257     ?ED?STACK  SEGMENT EDATA
------                  258       RSEG  ?ED?STACK
000000                  259     Stack_Area:     DS      100     ; 100 Bytes
                        260     
------                  261     ?FD?FAR_CONST SEGMENT HCONST
                        262     
------                  263     RSEG ?FD?FAR_CONST
000000 0001             264     my_const1:      DW      1,2,3,4,5,6,7,8,9,10    ; define content
000002 0002                     
000004 0003                     
000006 0004                     
000008 0005                     
00000A 0006                     
00000C 0007                     
00000E 0008                     
000010 0009                     
000012 000A                     
                        265     
                        266     
------                  267     ?FD?FAR_DATA SEGMENT HDATA
                        268     
------                  269     RSEG ?FD?FAR_DATA
000000                  270     my_word1:       DSW     10      ; reserve words
000014                  271     my_word2:       DSW     10      
                        272     
                        273     
------                  274     ?PR?MYCODE SEGMENT ECODE INBLOCK
                        275     Public Reset, func1
                        276     
000000                  277                     CSEG    AT 0
000000 02               278                     DB      02H     ; LJMP in Classic 8051 Mode
000001 0000       F     279                     DW      WORD0 Reset
                        280     
------                  281                     RSEG ?PR?MYCODE
                        282     
000000 75C7AA           283     Reset:          MOV     TA,#0xAA        ; Enable access to ACON
000003 75C755           284                     MOV     TA,#0x55
000006 759D06           285                     MOV     ACON,#00000110B ; Extended Stack, 22-bit contigous mode
000009 758100     F     286                     MOV     SP,#LOW Stack_Area
00000C 759B00     F     287                     MOV     ESP,#HIGH Stack_Area
                        288     
00000F 5386FE           289     Loop:           ANL     DPS,#0xFE       ; SEL DPTR[0]
000012 90000000   F     290                     MOV     DPTR,#my_const1
000016 438601           291                     ORL     DPS,#0x01       ; SEL DPTR[1]
000019 90000000   F     292                     MOV     DPTR,#my_word1
00001D 780A             293                     MOV     R0,#10
                        294     
00001F 110000     F     295                     ACALL   move_const2xdata
000022 12000000   F     296                     LCALL   func1
000026 010000     F     297                     AJMP    Loop
                        298     
000029 05E0             299     func1:          INC     ACC
00002B 22               300                     RET
                        301     
                        302     move_const2xdata  PROC
                        303     
00002C 5386FE           304                     ANL     DPS,#0xFE
00002F E4               305     move_Loop:      CLR     A
000030 93               306                     MOVC    A,@A+DPTR
000031 A3               307                     INC     DPTR
000032 0586             308                     INC     DPS
000034 F0               309                     MOVX    @DPTR,A
000035 A3               310                     INC     DPTR
000036 1586             311                     DEC     DPS
000038 D8F5             312                     DJNZ    R0,move_Loop
00003A 22               313                     RET
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     6

                        314                     ENDP
                        315     
                        316                     END
                        317     
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E                     T Y P E  V A L U E     ATTRIBUTES

?ED?STACK. . . . . . . . .  ED SEG   000064H       REL=UNIT, ALN=BYTE
?FD?FAR_CONST. . . . . . .  HC SEG   000014H       REL=UNIT, ALN=BYTE
?FD?FAR_DATA . . . . . . .  HD SEG   000028H       REL=UNIT, ALN=BYTE
?PR?MYCODE . . . . . . . .  EC SEG   00003BH       REL=INBLOCK, ALN=BYTE
AC . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC. . . . . . . . . . . .  D  ADDR  00E0H     A   
ACON . . . . . . . . . . .  D  ADDR  009DH     A   
AP . . . . . . . . . . . .  D  ADDR  009CH     A   
B. . . . . . . . . . . . .  D  ADDR  00F0H     A   
C0C. . . . . . . . . . . .  D  ADDR  00A3H     A   
C0IE . . . . . . . . . . .  B  ADDR  00E8H.6   A   
C0IP . . . . . . . . . . .  B  ADDR  00F8H.6   A   
C0IR . . . . . . . . . . .  D  ADDR  00A5H     A   
C0M10C . . . . . . . . . .  D  ADDR  00B7H     A   
C0M11C . . . . . . . . . .  D  ADDR  00BBH     A   
C0M12C . . . . . . . . . .  D  ADDR  00BCH     A   
C0M13C . . . . . . . . . .  D  ADDR  00BDH     A   
C0M14C . . . . . . . . . .  D  ADDR  00BEH     A   
C0M15C . . . . . . . . . .  D  ADDR  00BFH     A   
C0M1C. . . . . . . . . . .  D  ADDR  00ABH     A   
C0M2C. . . . . . . . . . .  D  ADDR  00ACH     A   
C0M3C. . . . . . . . . . .  D  ADDR  00ADH     A   
C0M4C. . . . . . . . . . .  D  ADDR  00AEH     A   
C0M5C. . . . . . . . . . .  D  ADDR  00AFH     A   
C0M6C. . . . . . . . . . .  D  ADDR  00B3H     A   
C0M7C. . . . . . . . . . .  D  ADDR  00B4H     A   
C0M8C. . . . . . . . . . .  D  ADDR  00B5H     A   
C0M9C. . . . . . . . . . .  D  ADDR  00B6H     A   
C0RE . . . . . . . . . . .  D  ADDR  00A7H     A   
C0RMS0 . . . . . . . . . .  D  ADDR  0096H     A   
C0RMS1 . . . . . . . . . .  D  ADDR  0097H     A   
C0S. . . . . . . . . . . .  D  ADDR  00A4H     A   
C0TE . . . . . . . . . . .  D  ADDR  00A6H     A   
C0TMA0 . . . . . . . . . .  D  ADDR  009EH     A   
C0TMA1 . . . . . . . . . .  D  ADDR  009FH     A   
C1C. . . . . . . . . . . .  D  ADDR  00E3H     A   
C1IE . . . . . . . . . . .  B  ADDR  00E8H.5   A   
C1IP . . . . . . . . . . .  B  ADDR  00F8H.5   A   
C1IR . . . . . . . . . . .  D  ADDR  00E5H     A   
C1M10C . . . . . . . . . .  D  ADDR  00F7H     A   
C1M11C . . . . . . . . . .  D  ADDR  00FBH     A   
C1M12C . . . . . . . . . .  D  ADDR  00FCH     A   
C1M13C . . . . . . . . . .  D  ADDR  00FDH     A   
C1M14C . . . . . . . . . .  D  ADDR  00FEH     A   
C1M15C . . . . . . . . . .  D  ADDR  00FFH     A   
C1M1C. . . . . . . . . . .  D  ADDR  00EBH     A   
C1M2C. . . . . . . . . . .  D  ADDR  00ECH     A   
C1M3C. . . . . . . . . . .  D  ADDR  00EDH     A   
C1M4C. . . . . . . . . . .  D  ADDR  00EEH     A   
C1M5C. . . . . . . . . . .  D  ADDR  00EFH     A   
C1M6C. . . . . . . . . . .  D  ADDR  00F3H     A   
C1M7C. . . . . . . . . . .  D  ADDR  00F4H     A   
C1M8C. . . . . . . . . . .  D  ADDR  00F5H     A   
C1M9C. . . . . . . . . . .  D  ADDR  00F6H     A   
C1RE . . . . . . . . . . .  D  ADDR  00E7H     A   
C1RMS0 . . . . . . . . . .  D  ADDR  00D6H     A   
C1RMS1 . . . . . . . . . .  D  ADDR  00D7H     A   
C1S. . . . . . . . . . . .  D  ADDR  00E4H     A   
C1TE . . . . . . . . . . .  D  ADDR  00E6H     A   
C1TMA0 . . . . . . . . . .  D  ADDR  00DEH     A   
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     8

C1TMA1 . . . . . . . . . .  D  ADDR  00DFH     A   
C_T2 . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CANBIE . . . . . . . . . .  B  ADDR  00E8H.7   A   
CANBIP . . . . . . . . . .  B  ADDR  00F8H.7   A   
CKCON. . . . . . . . . . .  D  ADDR  008EH     A   
COR. . . . . . . . . . . .  D  ADDR  00CEH     A   
CP_RL2 . . . . . . . . . .  B  ADDR  00C8H.0   A   
CY . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DPH. . . . . . . . . . . .  D  ADDR  0083H     A   
DPH1 . . . . . . . . . . .  D  ADDR  0085H     A   
DPL. . . . . . . . . . . .  D  ADDR  0082H     A   
DPL1 . . . . . . . . . . .  D  ADDR  0084H     A   
DPS. . . . . . . . . . . .  D  ADDR  0086H     A   
DPX. . . . . . . . . . . .  D  ADDR  0093H     A   
DPX1 . . . . . . . . . . .  D  ADDR  0095H     A   
EA . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
EIE. . . . . . . . . . . .  D  ADDR  00E8H     A   
EIP. . . . . . . . . . . .  D  ADDR  00F8H     A   
EPF1 . . . . . . . . . . .  B  ADDR  00D8H.5   A   
ES0. . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ES1. . . . . . . . . . . .  B  ADDR  00A8H.6   A   
ESP. . . . . . . . . . . .  D  ADDR  009BH     A   
ET0. . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1. . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2. . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EWDI . . . . . . . . . . .  B  ADDR  00E8H.4   A   
EWT. . . . . . . . . . . .  B  ADDR  00D8H.1   A   
EX0. . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1. . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EX2. . . . . . . . . . . .  B  ADDR  00E8H.0   A   
EX3. . . . . . . . . . . .  B  ADDR  00E8H.1   A   
EX4. . . . . . . . . . . .  B  ADDR  00E8H.2   A   
EX5. . . . . . . . . . . .  B  ADDR  00E8H.3   A   
EXEN2. . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2 . . . . . . . . . . .  B  ADDR  00C8H.6   A   
EXIF . . . . . . . . . . .  D  ADDR  0091H     A   
F0 . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
F1 . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
FUNC1. . . . . . . . . . .  EC ADDR  0029H     R   SEG=?PR?MYCODE
IE . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0. . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1. . . . . . . . . . . .  B  ADDR  0088H.3   A   
IP . . . . . . . . . . . .  D  ADDR  00B8H     A   
IT0. . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1. . . . . . . . . . . .  B  ADDR  0088H.2   A   
LOOP . . . . . . . . . . .  EC ADDR  000FH     R   SEG=?PR?MYCODE
MA . . . . . . . . . . . .  D  ADDR  00D3H     A   
MB . . . . . . . . . . . .  D  ADDR  00D4H     A   
MC . . . . . . . . . . . .  D  ADDR  00D5H     A   
MCNT0. . . . . . . . . . .  D  ADDR  00D1H     A   
MCNT1. . . . . . . . . . .  D  ADDR  00D2H     A   
MCON . . . . . . . . . . .  D  ADDR  00C6H     A   
MOVE_CONST2XDATA . . . . .  EC ADDR  002CH     R   SEG=?PR?MYCODE
MOVE_LOOP. . . . . . . . .  EC ADDR  002FH     R   SEG=?PR?MYCODE
MXAX . . . . . . . . . . .  D  ADDR  00EAH     A   
MY_CONST1. . . . . . . . .  HC ADDR  0000H     R   SEG=?FD?FAR_CONST
MY_WORD1 . . . . . . . . .  HD ADDR  0000H     R   SEG=?FD?FAR_DATA
MY_WORD2 . . . . . . . . .  HD ADDR  0014H     R   SEG=?FD?FAR_DATA
OV . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P. . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P1 . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_0 . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1 . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2 . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_3 . . . . . . . . . . .  B  ADDR  0090H.3   A   
P1_4 . . . . . . . . . . .  B  ADDR  0090H.4   A   
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE     9

P1_5 . . . . . . . . . . .  B  ADDR  0090H.5   A   
P1_6 . . . . . . . . . . .  B  ADDR  0090H.6   A   
P1_7 . . . . . . . . . . .  B  ADDR  0090H.7   A   
P2 . . . . . . . . . . . .  D  ADDR  00A0H     A   
P2_0 . . . . . . . . . . .  B  ADDR  00A0H.0   A   
P2_1 . . . . . . . . . . .  B  ADDR  00A0H.1   A   
P2_2 . . . . . . . . . . .  B  ADDR  00A0H.2   A   
P2_3 . . . . . . . . . . .  B  ADDR  00A0H.3   A   
P2_4 . . . . . . . . . . .  B  ADDR  00A0H.4   A   
P2_5 . . . . . . . . . . .  B  ADDR  00A0H.5   A   
P2_6 . . . . . . . . . . .  B  ADDR  00A0H.6   A   
P2_7 . . . . . . . . . . .  B  ADDR  00A0H.7   A   
P3 . . . . . . . . . . . .  D  ADDR  00B0H     A   
P3_0 . . . . . . . . . . .  B  ADDR  00B0H.0   A   
P3_1 . . . . . . . . . . .  B  ADDR  00B0H.1   A   
P3_2 . . . . . . . . . . .  B  ADDR  00B0H.2   A   
P3_3 . . . . . . . . . . .  B  ADDR  00B0H.3   A   
P3_4 . . . . . . . . . . .  B  ADDR  00B0H.4   A   
P3_5 . . . . . . . . . . .  B  ADDR  00B0H.5   A   
P3_6 . . . . . . . . . . .  B  ADDR  00B0H.6   A   
P3_7 . . . . . . . . . . .  B  ADDR  00B0H.7   A   
P4 . . . . . . . . . . . .  D  ADDR  0080H     A   
P4_0 . . . . . . . . . . .  B  ADDR  0080H.0   A   
P4_1 . . . . . . . . . . .  B  ADDR  0080H.1   A   
P4_2 . . . . . . . . . . .  B  ADDR  0080H.2   A   
P4_3 . . . . . . . . . . .  B  ADDR  0080H.3   A   
P4_4 . . . . . . . . . . .  B  ADDR  0080H.4   A   
P4_5 . . . . . . . . . . .  B  ADDR  0080H.5   A   
P4_6 . . . . . . . . . . .  B  ADDR  0080H.6   A   
P4_7 . . . . . . . . . . .  B  ADDR  0080H.7   A   
P4CNT. . . . . . . . . . .  D  ADDR  0092H     A   
P5 . . . . . . . . . . . .  D  ADDR  00A1H     A   
P5CNT. . . . . . . . . . .  D  ADDR  00A2H     A   
PCON . . . . . . . . . . .  D  ADDR  0087H     A   
PF1. . . . . . . . . . . .  B  ADDR  00D8H.4   A   
PMR. . . . . . . . . . . .  D  ADDR  00C4H     A   
POR. . . . . . . . . . . .  B  ADDR  00D8H.6   A   
PS0. . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PS1. . . . . . . . . . . .  B  ADDR  00B8H.6   A   
PSW. . . . . . . . . . . .  D  ADDR  00D0H     A   
PT0. . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT1. . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT2. . . . . . . . . . . .  B  ADDR  00B8H.5   A   
PWDI . . . . . . . . . . .  B  ADDR  00F8H.4   A   
PX0. . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX1. . . . . . . . . . . .  B  ADDR  00B8H.2   A   
PX2. . . . . . . . . . . .  B  ADDR  00F8H.0   A   
PX3. . . . . . . . . . . .  B  ADDR  00F8H.1   A   
PX4. . . . . . . . . . . .  B  ADDR  00F8H.2   A   
PX5. . . . . . . . . . . .  B  ADDR  00F8H.3   A   
RB8. . . . . . . . . . . .  B  ADDR  0098H.2   A   
RB81 . . . . . . . . . . .  B  ADDR  00C0H.2   A   
RCAP2H . . . . . . . . . .  D  ADDR  00CBH     A   
RCAP2L . . . . . . . . . .  D  ADDR  00CAH     A   
RCLK . . . . . . . . . . .  B  ADDR  00C8H.5   A   
REN. . . . . . . . . . . .  B  ADDR  0098H.4   A   
REN1 . . . . . . . . . . .  B  ADDR  00C0H.4   A   
RESET. . . . . . . . . . .  EC ADDR  0000H     R   SEG=?PR?MYCODE
RI . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RI1. . . . . . . . . . . .  B  ADDR  00C0H.0   A   
RS0. . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1. . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RWT. . . . . . . . . . . .  B  ADDR  00D8H.0   A   
SADDR0 . . . . . . . . . .  D  ADDR  00A9H     A   
SADDR1 . . . . . . . . . .  D  ADDR  00AAH     A   
SADEN0 . . . . . . . . . .  D  ADDR  00B9H     A   
AX51 MACRO ASSEMBLER  INST390                                                               09/01/06 16:15:05 PAGE    10

SADEN1 . . . . . . . . . .  D  ADDR  00BAH     A   
SBUF0. . . . . . . . . . .  D  ADDR  0099H     A   
SBUF1. . . . . . . . . . .  D  ADDR  00C1H     A   
SCON0. . . . . . . . . . .  D  ADDR  0098H     A   
SCON1. . . . . . . . . . .  D  ADDR  00C0H     A   
SM0. . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM01 . . . . . . . . . . .  B  ADDR  00C0H.7   A   
SM1. . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM11 . . . . . . . . . . .  B  ADDR  00C0H.6   A   
SM2. . . . . . . . . . . .  B  ADDR  0098H.5   A   
SM21 . . . . . . . . . . .  B  ADDR  00C0H.5   A   
SMOD_1 . . . . . . . . . .  B  ADDR  00D8H.7   A   
SP . . . . . . . . . . . .  D  ADDR  0081H     A   
STACK_AREA . . . . . . . .  ED ADDR  0000H     R   SEG=?ED?STACK
STATUS . . . . . . . . . .  D  ADDR  00C5H     A   
T2CON. . . . . . . . . . .  D  ADDR  00C8H     A   
T2MOD. . . . . . . . . . .  D  ADDR  00C9H     A   
TA . . . . . . . . . . . .  D  ADDR  00C7H     A   
TB8. . . . . . . . . . . .  B  ADDR  0098H.3   A   
TB81 . . . . . . . . . . .  B  ADDR  00C0H.3   A   
TCLK . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON . . . . . . . . . . .  D  ADDR  0088H     A   
TF0. . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1. . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2. . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0. . . . . . . . . . . .  D  ADDR  008CH     A   
TH1. . . . . . . . . . . .  D  ADDR  008DH     A   
TH2. . . . . . . . . . . .  D  ADDR  00CDH     A   
TI . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TI1. . . . . . . . . . . .  B  ADDR  00C0H.1   A   
TL0. . . . . . . . . . . .  D  ADDR  008AH     A   
TL1. . . . . . . . . . . .  D  ADDR  008BH     A   
TL2. . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD . . . . . . . . . . .  D  ADDR  0089H     A   
TR0. . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1. . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2. . . . . . . . . . . .  B  ADDR  00C8H.2   A   
WDCON. . . . . . . . . . .  D  ADDR  00D8H     A   
WDIF . . . . . . . . . . .  B  ADDR  00D8H.3   A   
WTRF . . . . . . . . . . .  B  ADDR  00D8H.2   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
