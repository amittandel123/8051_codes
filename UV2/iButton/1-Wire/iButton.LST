C51 COMPILER V9.06   IBUTTON                                                               07/06/2012 09:37:27 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE IBUTTON
OBJECT MODULE PLACED IN iButton.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE iButton.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include<reg51.h>
   3          #include<intrins.h>
   4          #include"iButton.h"
   5          
   6          #define A 6
   7          #define B 64
   8          #define C 60
   9          #define D 10
  10          #define E 9
  11          #define F 55
  12          #define G 0
  13          #define H 480
  14          #define I 70
  15          #define J 410
  16          
  17          #define Port1_Input  (P1=0x00)
  18          #define Port1_Output (P1=0xFF)
  19          
  20          sbit iB_Pin = P1^0;
  21          
  22          void tickDelay(unsigned int tick)       // Delay of 'tick*1uS'
  23          {
  24   1              unsigned int i;
  25   1              for(i=0;i<tick;i++)
  26   1                      _nop_();
  27   1      }
  28          
  29          //-----------------------------------------------------------------------------
  30          // Generate a 1-Wire reset, return 1 if no presence detect was found,
  31          // return 0 otherwise.
  32          // (NOTE: Does not handle alarm presence from DS2404/DS1994)
  33          //
  34          
  35          unsigned int Reset_iButton(void)
  36          {
  37   1              unsigned int result;
  38   1              tickDelay(G);
  39   1              Port1_Output;           //make P1 output port
  40   1              P1 = 0x00;
  41   1              tickDelay(H);
  42   1              P1 = 0x01;
  43   1              tickDelay(I);
  44   1              Port1_Input;            //make P1 an input
  45   1              result = P1^0x01;       // Sample for presence pulse from slave
  46   1              tickDelay(J);           // Complete the reset sequence recovery
  47   1              return result;
  48   1      /*      if(result==1)
  49   1                      return 0;
  50   1              else
  51   1                      return 1;
  52   1      */
  53   1      }
  54          
  55          //-----------------------------------------------------------------------------
C51 COMPILER V9.06   IBUTTON                                                               07/06/2012 09:37:27 PAGE 2   

  56          // Send a 1-Wire write bit. Provide 10us recovery time.
  57          //
  58          void Write_Bit(unsigned int a)
  59          {
  60   1              if (a)
  61   1              {
  62   2                      // Write '1' bit
  63   2                      Port1_Output;
  64   2                      P1 = 0;
  65   2                      tickDelay(A);
  66   2                      P1 = 1;
  67   2                      tickDelay(B);
  68   2              }
  69   1              else
  70   1              {
  71   2                      // Write '0' bit
  72   2                      Port1_Output;
  73   2                      P1 = 0;
  74   2                      tickDelay(C);
  75   2                      P1 = 1;
  76   2                      tickDelay(D);
  77   2              }
  78   1      }
  79          
  80          //-----------------------------------------------------------------------------
  81          // Read a bit from the 1-Wire bus and return it. Provide 10us recovery time.
  82          //
  83          unsigned int Read_Bit(void)
  84          {
  85   1              unsigned int result;
  86   1              Port1_Output;
  87   1              P1 = 0;
  88   1              tickDelay(A);
  89   1              P1 = 1;
  90   1              tickDelay(E);
  91   1              Port1_Input;
  92   1              result = P1^0x01;       // Sample the bit value from the slave
  93   1              tickDelay(F);
  94   1              return result;
  95   1      }
  96          
  97          //-----------------------------------------------------------------------------
  98          // Write 1-Wire data byte
  99          //
 100          void Write_Byte(unsigned int val)
 101          {
 102   1              unsigned int loop;
 103   1              for (loop = 0; loop < 8; loop++)        // Loop to write each bit in the byte, LS-bit first
 104   1              {
 105   2                      Write_Bit(val & 0x01);
 106   2                      val >>= 1;                                              // shift the data byte for the next bit
 107   2              }
 108   1      }
 109          
 110          //-----------------------------------------------------------------------------
 111          // Read 1-Wire data byte and return it
 112          //
 113          unsigned int Read_Byte(void)
 114          {
 115   1              unsigned int loop, result=0;
 116   1              for(loop = 0; loop < 8; loop++)
 117   1              {
C51 COMPILER V9.06   IBUTTON                                                               07/06/2012 09:37:27 PAGE 3   

 118   2                      result >>= 1;           // shift the result to get it ready for the next bit
 119   2                      if(Read_Bit())          // if result is one, then set MSBit
 120   2                              result |= 0x80;
 121   2              }
 122   1              return result;
 123   1      }
 124          //-----------------------------------------------------------------------------
 125          // Write a 1-Wire data byte and return the sampled result.
 126          //
 127          unsigned int Touch_Byte(unsigned int val)
 128          {
 129   1              unsigned int loop, result=0;
 130   1              for(loop = 0; loop < 8; loop++)
 131   1              {
 132   2                      result >>= 1;           // shift the result to get it ready for the next bit
 133   2                      if(val & 0x01)          // If sending a '1' then read a bit else write a '0'
 134   2                      {
 135   3                              if (Read_Bit())
 136   3                                      result |= 0x80;
 137   3                      }
 138   2                      else
 139   2                              Write_Bit(0);   
 140   2                      val >>= 1;                      // shift the data byte for the next bit
 141   2              }
 142   1              return result;
 143   1      }
 144          
 145          //-----------------------------------------------------------------------------
 146          // Write a block 1-Wire data bytes and return the sampled result in the same
 147          // buffer.
 148          //
 149          void Write_Block(unsigned char *val, unsigned int data_len)
 150          {
 151   1              unsigned int loop;
 152   1              for (loop = 0; loop < data_len; loop++)
 153   1              {
 154   2                      val[loop] = Touch_Byte(val[loop]);
 155   2              }
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    362    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
