C51 COMPILER V9.03   LCD_SACHIN1                                                           11/18/2011 14:15:29 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE LCD_SACHIN1
OBJECT MODULE PLACED IN LCD_Sachin1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD_Sachin1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include <intrins.h>
   4          
   5          sbit RS = P2^0;
   6          sbit RW = P2^1;
   7          sbit EN = P2^2;
   8          sbit MOVE_LEFT = P2^3;
   9          sbit MOVE_RGHT = P2^4;
  10          bit LEFT=1;
  11          bit RIGHT=0;
  12          int cursor_count=1;
  13          int update_LED;
  14          
  15          sbit left = P0^5;
  16          sbit right = P0^6;
  17          void display_data(unsigned char port_data);
  18          void ClearDisplay(void);
  19          void SendCommand(unsigned char comd);
  20          void delay(unsigned int val);
  21          void move_cursor(int);
  22          
  23          void initialise(void)
  24          {
  25   1              P1=0xFF;
  26   1              P2=0xFF;
  27   1              P3=0xFF;
  28   1              EN=0;
  29   1              RS=0;
  30   1              update_LED=0;   
  31   1      }
  32          
  33          void writeCommand_LCD(void)
  34          {
  35   1              delay(5);
  36   1              SendCommand(0x38);
  37   1      
  38   1              delay(5);
  39   1              SendCommand(0x38);
  40   1      
  41   1              delay(5);
  42   1              SendCommand(0x38);
  43   1      
  44   1              delay(5);
  45   1              SendCommand(0x0C);
  46   1      
  47   1              delay(5);
  48   1              ClearDisplay();
  49   1              delay(5);
  50   1      }
  51          
  52          void SendCommand(unsigned char comd)
  53          {
  54   1              RS=0;
  55   1              RW=0;                   // to select Command Register
C51 COMPILER V9.03   LCD_SACHIN1                                                           11/18/2011 14:15:29 PAGE 2   

  56   1              P0=comd;                // put command on PORT2
  57   1              EN=1;                   // to Enable the LCD processor
  58   1              _nop_();
  59   1              EN=0;                   // to disable the LCD processor
  60   1      }
  61          
  62          
  63          void ClearDisplay(void)
  64          {
  65   1              SendCommand(0x01);      // clear display
  66   1              delay(15);
  67   1      
  68   1              SendCommand(0x02);      //send cursor to home location
  69   1              delay(15);
  70   1      }
  71          
  72          void writeData_LCD(unsigned char mdata[], unsigned int counter)
  73          {
  74   1              unsigned int cnt;
  75   1              if(update_LED == 0)
  76   1              {
  77   2                      for(cnt=0;cnt < counter;cnt++)
  78   2                      {
  79   3                              display_data(mdata[cnt]);
  80   3                              delay(5);
  81   3                      }
  82   2              }
  83   1              update_LED=1;
  84   1      }
  85          
  86          void display_data(unsigned char port_data)
  87          {
  88   1              RS=1;                   // to select DDRAM Register i.e. data register
  89   1              P0=port_data;   // put data on port
  90   1              EN=1;                   // to Enable the LCD processor
  91   1              _nop_();
  92   1              EN=0;                   // to disable the LCD processor
  93   1      }
  94          
  95          void delay(unsigned int val)
  96          {
  97   1              unsigned int u,v;
  98   1              for(u=0;u<=val;u++)
  99   1                      for(v=0;v<=100;v++);
 100   1      }
 101          
 102          void main(void)
 103          {
 104   1              
 105   1              P0=0xFF;
 106   1              initialise();
 107   1              writeCommand_LCD();
 108   1         
 109   1              SendCommand(0x80);      // select line 1 on LCD
 110   1              delay(10);
 111   1      
 112   1              update_LED=0;
 113   1              writeData_LCD("BHARGAVI",8);
 114   1              
 115   1                      
 116   1              SendCommand(0xC0);      // select line 2 n LCD
 117   1              delay(10);
C51 COMPILER V9.03   LCD_SACHIN1                                                           11/18/2011 14:15:29 PAGE 3   

 118   1              
 119   1              update_LED=0;
 120   1              writeData_LCD("KULKARNI",8);  
 121   1      
 122   1              SendCommand(0x02);      //send cursor to home location
 123   1              delay(5);
 124   1              
 125   1              SendCommand(0x0E);      // cursor display
 126   1              delay(5);
 127   1              
 128   1              update_LED=1;
 129   1              while(1)
 130   1              {
 131   2                      if(MOVE_LEFT==0x00)
 132   2                      {
 133   3                              move_cursor(LEFT);
 134   3                      }
 135   2                      else if(MOVE_RGHT==0x00)
 136   2                      {
 137   3                              move_cursor(RIGHT);             
 138   3                      }
 139   2              }
 140   1      }
 141          
 142          void move_cursor(int a)
 143          {
 144   1                      if(a==RIGHT)
 145   1                      {
 146   2                              cursor_count++;
 147   2                              if(cursor_count!=41 && cursor_count!=1)
 148   2                              {
 149   3                                      SendCommand(0x30);      //Right shift
 150   3                                      delay(5);
 151   3      
 152   3                                      SendCommand(0x1C);      //Right shift
 153   3                                      delay(500);
 154   3                              }
 155   2                              
 156   2                              else if(cursor_count==17)
 157   2                              {
 158   3                                      SendCommand(0xC0); 
 159   3                                      delay(500);
 160   3                                      cursor_count=41;
 161   3                              }
 162   2      
 163   2                              else if(cursor_count==57)
 164   2                              {
 165   3                                      SendCommand(0x80); 
 166   3                                      delay(500);
 167   3                                      cursor_count=1;
 168   3                              }
 169   2                      }
 170   1                      
 171   1                      else if(a==LEFT)
 172   1                      {
 173   2                              cursor_count--;
 174   2                              if(cursor_count!=16 && cursor_count!=56)
 175   2                              {
 176   3                                      SendCommand(0x18);      //Left shift
 177   3                                      delay(500);
 178   3                              }
 179   2      
C51 COMPILER V9.03   LCD_SACHIN1                                                           11/18/2011 14:15:29 PAGE 4   

 180   2                              else if(cursor_count==40)
 181   2                              {
 182   3                                      SendCommand(0x8F); 
 183   3                                      delay(500);
 184   3                                      cursor_count=16;
 185   3                              }
 186   2                      
 187   2                              else if(cursor_count==0)
 188   2                              {
 189   3                                      SendCommand(0xCF); 
 190   3                                      delay(500);
 191   3                                      cursor_count=56;
 192   3                              }
 193   2                      }
 194   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    542    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
